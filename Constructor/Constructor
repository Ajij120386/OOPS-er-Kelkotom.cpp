
/*
Constructors in C++

A constructor is a special member function with the same name as the class.
 The constructor doesnâ€™t have a return type. Constructors
are used to initialize the objects of its class.
Constructors are automatically invoked whenever an object is created.

Important Characteristics of Constructors in C++:

A constructor should be declared in the public section of the class
They are automatically invoked whenever the object is created
They cannot return values and do not have return types
It can have default arguments
We cannot refer to their address
Types of Constructor:

Parameterized constructors are those constructors that
 take one or more parameters.

 Default constructors are those constructors that take no parameters

 Default arguments of the constructor are those which are provided in the constructor declaration.
  If the values are not provided when calling the constructor the constructor uses the default arguments automatically.

  The dynamic initialization of the object means that the object is initialized at the runtime.
   Dynamic initialization of the object using a constructor is beneficial when the data is of different formats.
*/
#include<iostream>
using namespace std;


class Complex
{
    int a, b;

public:
    Complex(int, int); // Constructor declaration

    void printNumber()
    {
        cout << "Your number is " << a << " + " << b << "i" << endl;
    }
};

Complex ::Complex(int x, int y) // ----> This is a parameterized constructor as it takes 2 parameters
{
    a = x;
    b = y;
    // cout<<"Hello world";
}

   int main(){
    // Implicit call
    Complex a(4, 6);
    a.printNumber();

    // Explicit call
    Complex b = Complex(5, 7);
    b.printNumber();

    return 0;
}

