
// C++ program to demonstrate the working of friend function
/*
Definition:
       Friend functions are those functions that have the right to access the private
        data members of class even though they are not defined inside the class.
                               or
         A friend function is a function that is specified outside a class but
         has the ability to access the class members’ protected and private data.

Why do we need friend functions:
              In special cases when a class’s private data needs to be accessed directly without
              using objects of that class,we need friend functions.

  Data hiding is a fundamental concept of object-oriented programming.

  It restricts the access of private members from outside of the class.

   similarly, protected members can only be accessed by derived classes and
    are inaccessible from outside. For example,

class MyClass {
    private:
        int member1;
}

int main() {
    MyClass obj;

    // Error! Cannot access private members from here.
    obj.member1 = 5;
}
However, there is a feature in C++ called friend functions that break
this rule and allow us to access member functions from outside the class.

A friend function can access the private and protected data of a class. We declare a
friend function using the friend keyword inside the body of the class.

class className {
    ... .. ...
    friend returnType functionName(arguments);
    ... .. ...
}
*/

#include <iostream>
using namespace std;

class Distance {
    private:
        int meter;

        // friend function
        friend int addFive(Distance);

    public:
        Distance(){
            meter=0;
            }

};

// friend function definition
int addFive(Distance d) {

    //accessing private members from the friend function
    d.meter += 5;
    return d.meter;
}

int main() {
    Distance D;
    cout << "Distance: " << addFive(D);
    return 0;
}
